func int CountTriangles(real coef){	Th = ThRef;	for(i=0; i < nbIter; i++){		Th = adaptmesh(Th,				coef*metricxx,				coef*metricxy,				coef*metricyy,				IsMetric = 1);	};	DataOutput << "coef : "<< coef << ", nb triangles : " << Th.nt<< endl;	return Th.nt;};	DataOutput << endl << testName << endl;	real coefMax = 1;real coefMin = 1;real coefMid = 1;while(CountTriangles(coefMin) > nb){coefMin/=2;};while(CountTriangles(coefMax) < nb){coefMax*=2;};if(coefMin < 1){	coefMax = 2*coefMin;} else {	coefMin = coefMax/2;};		for(int i=0; i< nbIterDicho; i++){	coefMid = (coefMin+coefMax)/2;	if(CountTriangles(coefMid) > nb){		coefMax = coefMid;			} else {		coefMin = coefMid;			};};if(ShowMesh){	plot(Th, wait = 1);//	fAdaptP1 = f;//	plot(fAdaptP1);};